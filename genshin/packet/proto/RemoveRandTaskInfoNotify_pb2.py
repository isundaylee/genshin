# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: genshin/packet/proto/RemoveRandTaskInfoNotify.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n3genshin/packet/proto/RemoveRandTaskInfoNotify.proto\"\xf3\x01\n\x18RemoveRandTaskInfoNotify\x12\x0f\n\x07is_succ\x18\t \x01(\x08\x12\x36\n\x06reason\x18\n \x01(\x0e\x32&.RemoveRandTaskInfoNotify.FinishReason\x12\x14\n\x0crand_task_id\x18\r \x01(\r\"x\n\x0c\x46inishReason\x12\x19\n\x15\x46INISH_REASON_DEFAULT\x10\x00\x12\x17\n\x13\x46INISH_REASON_CLEAR\x10\x01\x12\x1a\n\x16\x46INISH_REASON_DISTANCE\x10\x02\x12\x18\n\x14\x46INISH_REASON_FINISH\x10\x03\x42\x16\n\x14org.sorapointa.protob\x06proto3')



_REMOVERANDTASKINFONOTIFY = DESCRIPTOR.message_types_by_name['RemoveRandTaskInfoNotify']
_REMOVERANDTASKINFONOTIFY_FINISHREASON = _REMOVERANDTASKINFONOTIFY.enum_types_by_name['FinishReason']
RemoveRandTaskInfoNotify = _reflection.GeneratedProtocolMessageType('RemoveRandTaskInfoNotify', (_message.Message,), {
  'DESCRIPTOR' : _REMOVERANDTASKINFONOTIFY,
  '__module__' : 'genshin.packet.proto.RemoveRandTaskInfoNotify_pb2'
  # @@protoc_insertion_point(class_scope:RemoveRandTaskInfoNotify)
  })
_sym_db.RegisterMessage(RemoveRandTaskInfoNotify)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\024org.sorapointa.proto'
  _REMOVERANDTASKINFONOTIFY._serialized_start=56
  _REMOVERANDTASKINFONOTIFY._serialized_end=299
  _REMOVERANDTASKINFONOTIFY_FINISHREASON._serialized_start=179
  _REMOVERANDTASKINFONOTIFY_FINISHREASON._serialized_end=299
# @@protoc_insertion_point(module_scope)
