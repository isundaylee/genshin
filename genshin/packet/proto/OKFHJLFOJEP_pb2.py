# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: genshin/packet/proto/OKFHJLFOJEP.proto
# Protobuf Python Version: 5.27.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    3,
    '',
    'genshin/packet/proto/OKFHJLFOJEP.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from genshin.packet.proto import BCBOHNAGDHM_pb2 as genshin_dot_packet_dot_proto_dot_BCBOHNAGDHM__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&genshin/packet/proto/OKFHJLFOJEP.proto\x1a&genshin/packet/proto/BCBOHNAGDHM.proto\"\xb4\x02\n\x0bOKFHJLFOJEP\x12\x13\n\x0bIICDMAJAJLN\x18\r \x03(\r\x12!\n\x0b\x42\x41HEJMIPPJI\x18\x0c \x03(\x0b\x32\x0c.BCBOHNAGDHM\x12\x13\n\x0bGFLLBCGNOKJ\x18\x04 \x03(\r\x12\x13\n\x0b\x42IPADACDOFI\x18\x06 \x03(\r\x12\x13\n\x0bMBBNHOBFOED\x18\x0e \x01(\r\x12\x13\n\x0b\x42\x41\x42HIELKKLC\x18\x07 \x01(\x08\x12\x13\n\x0b\x42LBKMOFKBKI\x18\x0f \x01(\x08\x12\x13\n\x0bLMHCGGOLOLM\x18\x08 \x01(\x08\x12\x0c\n\x04guid\x18\x02 \x01(\r\x12\x13\n\x0b\x46\x41POJDBBAEF\x18\x05 \x01(\r\x12\x13\n\x0bGINEMCIFFNB\x18\n \x01(\r\x12\x13\n\x0bLHMDBBFAIFM\x18\x0b \x01(\r\x12\r\n\x05level\x18\x03 \x01(\r\x12\x13\n\x0bNPOALLHCPJD\x18\x01 \x01(\rb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'genshin.packet.proto.OKFHJLFOJEP_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_OKFHJLFOJEP']._serialized_start=83
  _globals['_OKFHJLFOJEP']._serialized_end=391
# @@protoc_insertion_point(module_scope)
