# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: genshin/packet/proto/DragonSpineActivityDetailInfo.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from genshin.packet.proto import DragonSpineChapterInfo_pb2 as genshin_dot_packet_dot_proto_dot_DragonSpineChapterInfo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n8genshin/packet/proto/DragonSpineActivityDetailInfo.proto\x1a\x31genshin/packet/proto/DragonSpineChapterInfo.proto\"\xf5\x01\n\x1d\x44ragonSpineActivityDetailInfo\x12\x19\n\x11is_content_closed\x18\n \x01(\x08\x12\x32\n\x11\x63hapter_info_list\x18\x04 \x03(\x0b\x32\x17.DragonSpineChapterInfo\x12\x1c\n\x14weapon_enhance_level\x18\x02 \x01(\r\x12\x1b\n\x13\x63ontent_finish_time\x18\x0f \x01(\r\x12\x1a\n\x12shimmering_essence\x18\r \x01(\r\x12\x14\n\x0cwarm_essence\x18\x0b \x01(\r\x12\x18\n\x10wondrous_essence\x18\x07 \x01(\rB\x16\n\x14org.sorapointa.protob\x06proto3')



_DRAGONSPINEACTIVITYDETAILINFO = DESCRIPTOR.message_types_by_name['DragonSpineActivityDetailInfo']
DragonSpineActivityDetailInfo = _reflection.GeneratedProtocolMessageType('DragonSpineActivityDetailInfo', (_message.Message,), {
  'DESCRIPTOR' : _DRAGONSPINEACTIVITYDETAILINFO,
  '__module__' : 'genshin.packet.proto.DragonSpineActivityDetailInfo_pb2'
  # @@protoc_insertion_point(class_scope:DragonSpineActivityDetailInfo)
  })
_sym_db.RegisterMessage(DragonSpineActivityDetailInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\024org.sorapointa.proto'
  _DRAGONSPINEACTIVITYDETAILINFO._serialized_start=112
  _DRAGONSPINEACTIVITYDETAILINFO._serialized_end=357
# @@protoc_insertion_point(module_scope)
